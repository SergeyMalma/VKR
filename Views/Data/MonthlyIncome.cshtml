@using MyWebApp.Models
@{
    ViewBag.Title = "ASP.NET Identity";
    int sum = 0;
    int newusers = 0;
    int deletedusers = 0;
    int SoldLicensess = 0;
}
<p><a href="/Data/Index">Назад к таблицам </a></p>
<div class="panel-heading">
    Статистика за год
</div>
<div id="chartMonthlyIncomes1"></div>
@foreach (MonthlyIncome monthlyIncome in Model)
{

    sum += monthlyIncome.Earnings;
}
<td>Общий заработок за год: @sum</td>
<div id="chartMonthlyIncomes2"></div>
@foreach (MonthlyIncome monthlyIncome in Model)
{

    newusers += monthlyIncome.SubscribedUsers;
}
<td>Новых пользователей за год: @newusers</td>
<div id="chartMonthlyIncomes3"></div>
@foreach (MonthlyIncome monthlyIncome in Model)
{

    deletedusers += monthlyIncome.UnsubscribedUsers;
}
<td>Ушедших пользователей за год: @deletedusers</td>
<div></div>
<td>Прирост пользователей за год: @(newusers-deletedusers)</td>
<div id="chartMonthlyIncomes4"></div>
@foreach (MonthlyIncome monthlyIncome in Model)
{

    SoldLicensess += monthlyIncome.SoldLicenses;
}
<td>Количество проданых лицензий за год: @SoldLicensess</td>
<div></div>
@using (Html.BeginForm("GetMonthlyIncomeInfo", "Data", FormMethod.Post))
{
    @Html.CheckBox("Month", true) <span>Месяц</span>
    @Html.CheckBox("Earnings", true) <span>Выручка</span>
    @Html.CheckBox("SubscribedUsers", true) <span>Новые покупатели</span>
    @Html.CheckBox("UnsubscribedUsers", true) <span>Потерянные покупатели</span>
    @Html.CheckBox("SoldLicense", true) <span>Количество проданных лицензий</span>
    <input type="submit" value="Сгенерировать в PDF" />
}
<div class="panel panel-primary">
    <div class="panel-heading">
        Данные о выручке за год
    </div>
    <table class="table table-striped">
        <tr>
            <th>Месяц</th>
            <th>Выручка</th>
            <th>Новые покупатели</th>
            <th>Потерянные покупатели</th>
            <th>Количество проданных лицензий</th>

        </tr>
        @foreach (MonthlyIncome monthlyIncome in Model)
        {
            <tr>
                <td>@monthlyIncome.Month</td>
                <td>@monthlyIncome.Earnings</td>
                <td>@monthlyIncome.SubscribedUsers</td>
                <td>@monthlyIncome.UnsubscribedUsers</td>
                <td>@monthlyIncome.SoldLicenses</td>
            </tr>
        }
    </table>
</div>


@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
            var jsonData = $.ajax({
                url: "/Data/OnGetChartDataMonthlyIncome1",
                dataType: "json",
                async: false
            }).responseText;
            // Create the data table.
            var data = new google.visualization.DataTable(jsonData);

            // Set chart options
            var options = {
                'title': 'Прибыль в каждом месяце',
                'width': 1500,
                'height': 500,

            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chartMonthlyIncomes1'));
            chart.draw(data, options);
        }
    </script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
            var jsonData = $.ajax({
                url: "/Data/OnGetChartDataMonthlyIncome2",
                dataType: "json",
                async: false
            }).responseText;
            // Create the data table.
            var data = new google.visualization.DataTable(jsonData);

            // Set chart options
            var options = {
                'title': 'Количество новых пользователей за год',
                'width': 1000,
                'height': 500,

            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.ColumnChart(document.getElementById('chartMonthlyIncomes2'));
            chart.draw(data, options);
        }
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
            var jsonData = $.ajax({
                url: "/Data/OnGetChartDataMonthlyIncome3",
                dataType: "json",
                async: false
            }).responseText;
            // Create the data table.
            var data = new google.visualization.DataTable(jsonData);

            // Set chart options
            var options = {
                'title': 'Количество ушедших пользователей за год',
                'width': 1000,
                'height': 500,

            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.ColumnChart(document.getElementById('chartMonthlyIncomes3'));
            chart.draw(data, options);
        }
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
            var jsonData = $.ajax({
                url: "/Data/OnGetChartDataMonthlyIncome4",
                dataType: "json",
                async: false
            }).responseText;
            // Create the data table.
            var data = new google.visualization.DataTable(jsonData);

            // Set chart options
            var options = {
                'pieHole': 0.5,
                'title': 'Количество проданных лицензий',
                'width': 1000,
                'height': 500,

            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chartMonthlyIncomes4'));
            chart.draw(data, options);
        }
    </script>
}
